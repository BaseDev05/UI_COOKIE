{"version":3,"sources":["views/Ifos/components/IfoTabButtons/index.tsx","views/Ifos/components/Hero.tsx","hooks/useBlock.ts","views/Ifos/components/IfoCard/IfoCardHeader.tsx","views/Ifos/components/IfoCard/IfoCardProgress.tsx","views/Ifos/components/IfoCard/IfoCardDescription.tsx","views/Ifos/components/IfoCard/IfoCardDetails.tsx","utils/getTimePeriods.ts","views/Ifos/components/IfoCard/IfoCardTime.tsx","views/Ifos/components/IfoCard/LabelButton.tsx","components/Input/Input.tsx","components/Input/BalanceInput.tsx","views/Ifos/components/IfoCard/ContributeModal.tsx","views/Ifos/components/IfoCard/IfoCardContribute.tsx","hooks/useAllowance.ts","views/Ifos/components/IfoCard/index.tsx","views/Ifos/components/Title.tsx","views/Ifos/components/IfoCards.tsx","views/Ifos/CurrentIfo.tsx","views/Ifos/PastIfo.tsx","views/Ifos/index.tsx","hooks/useI18n.ts","hooks/useContract.ts","utils/callHelpers.ts","hooks/useWeb3.ts","components/UnlockButton.tsx","hooks/useApprove.ts","hooks/useTokenBalance.ts"],"names":["Wrapper","styled","div","IfoTabButtons","useRouteMatch","url","isExact","activeIndex","scale","variant","as","Link","to","Title","Heading","attrs","size","theme","colors","secondary","StyledHero","Text","Hero","TranslateString","useI18n","Container","color","href","useBlock","useContext","BlockContext","StyledIfoCardHeader","Flex","Name","Description","textSubtle","IfoCardHeader","ifoId","name","subTitle","mb","alignItems","src","alt","width","height","StyledProgress","IfoCardProgress","progress","primaryStep","StyledIfoCardDescription","Divider","borderColor","ToggleButton","button","primary","isOpen","IfoCardDescription","defaultIsOpen","description","useState","setIsOpen","onClick","StyledIfoCardDetails","Item","Display","IfoCardDetails","launchDate","launchTime","saleAmount","raiseAmount","cakeToBurn","projectSiteUrl","raisingAmount","totalAmount","target","rel","ml","style","display","times","toFixed","margin","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","Math","abs","timeLeft","years","months","days","hours","minutes","floor","Details","Countdown","IfoCardTime","isLoading","status","secondsUntilStart","secondsUntilEnd","block","countdownToUse","timeUntil","suffix","bold","ButtonWrapper","radii","default","LabelButton","value","label","buttonLabel","disabled","fontSize","StyledInputWrapper","props","input","spacing","StyledInput","Input","endAdornment","onChange","placeholder","startAdornment","StyledSpacer","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","BalanceInput","max","symbol","onSelectMax","toLocaleString","ContributeModal","currency","contract","currencyAddress","onDismiss","setValue","pendingTx","setPendingTx","account","useWeb3React","balance","getFullDisplayBalance","useTokenBalance","title","e","currentTarget","toString","justifyContent","mr","a","methods","deposit","BigNumber","pow","send","from","IfoCardContribute","address","tokenDecimals","offeringTokenBalance","setOfferingTokenBalance","amount","claimed","userInfo","setUserInfo","contractRaisingToken","useERC20","allowance","tokenContract","spenderAddress","dependency","BIG_ZERO","setAllowance","useEffect","call","res","console","error","fetch","useIfoAllowance","onApprove","useIfoApprove","useModal","onPresentContributeModal","getOfferingAmount","userinfo","claim","harvest","isFinished","percentOfUserContribution","toNumber","getBalanceNumber","StyledIfoCard","Card","BackgroundImg","img","getStatus","currentBlock","startBlock","endBlock","IfoCard","ifo","id","releaseBlockNumber","blocksRemaining","startBlockNum","endBlockNum","state","setState","useIfoContract","Ribbon","variantColor","text","getRibbonComponent","Promise","all","parseInt","totalBlocks","BSC_BLOCK_TIME","fetchProgress","isActive","ribbon","UnlockButton","fullWidth","IfoCardWrapper","mediaQueries","md","isSingle","defaultProps","LaunchIfoCallout","BaseLayout","sm","List","ul","activeIfo","ifosConfig","find","Ifo","IfoCards","pt","responsive","external","inactiveIfo","filter","PastIfo","map","Ifos","path","exact","CurrentIfo","translations","TranslationsContext","translationId","fallback","data","length","foundTranslation","translation","stringId","includesVariable","includes","interpolatedText","isEmpty","Object","keys","forEach","dataKey","templateKey","RegExp","replace","web3","useWeb3","useMemo","getIfoContract","getBep20Contract","useCake","getCakeContract","useLottery","getLotteryContract","useMasterchef","getMasterchefContract","useKingdom","getKingdomsContract","useBnbDvividendsContract","getBnbDvividendsContract","useSousChef","getSouschefContract","approve","lpContract","masterChefContract","options","ethers","constants","MaxUint256","stake","pid","DEFAULT_TOKEN_DECIMAL","on","tx","transactionHash","sousStake","sousChefContract","decimals","BIG_TEN","sousStakeBnb","gas","unstake","withdraw","sousUnstake","emergencyWithdraw","sousEmergencyUnstake","isKingdom","user","nonce","signature","soushHarvest","soushHarvestBnb","library","refEth","useRef","Web3","getWeb3NoAccount","setweb3","current","useAuth","login","logout","onPresentConnectModal","useWalletModal","useApprove","dispatch","useAppDispatch","kingdomContract","useCallback","fetchFarmUserDataAsync","useTotalSupply","slowRefresh","useRefresh","totalSupply","setTotalSupply","cakeContract","supply","fetchTotalSupply","useBurnedBalance","tokenAddress","setBalance","balanceOf","fetchBalance","fastRefresh"],"mappings":"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","file":"static/js/8.fa0e0350.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap-libs/uikit'\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 39px;\n`\n\nconst IfoTabButtons = () => {\n  const { url, isExact } = useRouteMatch()\n\n  return (\n    <Wrapper>\n      <ButtonMenu activeIndex={!isExact ? 1 : 0} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          Next IDO\n        </ButtonMenuItem>\n        <ButtonMenuItem as={Link} to={`${url}/history`}>\n          Past IDOs\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </Wrapper>\n  )\n}\n\nexport default IfoTabButtons\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text, Button } from '@pancakeswap-libs/uikit'\nimport Container from 'components/layout/Container'\nimport useI18n from 'hooks/useI18n'\n\nconst Title = styled(Heading).attrs({ as: 'h1', size: 'xl' })`\n  color: ${({ theme }) => theme.colors.secondary};\n  margin-bottom: 24px;\n`\n\nconst Blurb = styled(Text)`\n  color: #ffffff;\n  font-size: 20px;\n  font-weight: 600;\n`\n\nconst StyledHero = styled.div`\n  background-image: linear-gradient(139.73deg, #E6FDFF 0%, #eff8ff 100%);\n  padding-bottom: 40px;\n  padding-top: 40px;\n  margin-bottom: 32px;\n`\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: flex-start;\n`\n\nconst Hero = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <StyledHero>\n      <Container>\n        <Title>{TranslateString(500, 'IDO: Initial DEX Offerings')}</Title>\n        <Heading as=\"h2\" color=\"secondary\">{TranslateString(502, 'Participate in new platform tokens via decentralized IDOs! 50% of the raise burns CUB and 50% goes to the project team who initiated the IDO.')}</Heading>\n        <br />\n        <Wrapper>\n          <Button size=\"sm\">\n            <a href=\"https://docs.cubdefi.com/major-feature-releases/initial-dex-offering-ido\">Learn More</a>\n          </Button>\n        </Wrapper>\n      </Container>\n    </StyledHero>\n  )\n}\n\nexport default Hero\n","import { useContext } from 'react'\nimport { BlockContext } from 'contexts/BlockContext'\n\nconst useBlock = () => {\n  const block: number = useContext(BlockContext)\n  return block\n}\n\nexport default useBlock\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text, Flex } from '@pancakeswap-libs/uikit'\n\ninterface IfoCardHeaderProps {\n  ifoId: string\n  name: string\n  subTitle: string\n}\n\nconst StyledIfoCardHeader = styled(Flex)`\n  & > div {\n    flex: 1;\n  }\n`\n\nconst Name = styled(Heading).attrs({ as: 'h3', size: 'lg' })`\n  margin-bottom: 4px;\n  text-align: right;\n`\n\nconst Description = styled(Text)`\n  color: ${({ theme }) => theme.colors.textSubtle};\n  font-size: 14px;\n  text-align: right;\n`\n\nconst IfoCardHeader: React.FC<IfoCardHeaderProps> = ({ ifoId, name, subTitle }) => {\n  return (\n    <StyledIfoCardHeader mb=\"24px\" alignItems=\"center\">\n      <img src={`/images/ifos/${ifoId}.svg`} alt={ifoId} width=\"64px\" height=\"64px\" />\n      <div>\n        <Name>{name}</Name>\n        <Description>{subTitle}</Description>\n      </div>\n    </StyledIfoCardHeader>\n  )\n}\n\nexport default IfoCardHeader\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Progress } from '@pancakeswap-libs/uikit'\n\ninterface IfoCardProgressProps {\n  progress: number\n}\n\nconst StyledProgress = styled.div`\n  margin-bottom: 16px;\n`\n\nconst IfoCardProgress: React.FC<IfoCardProgressProps> = ({ progress }) => {\n  return (\n    <StyledProgress>\n      <Progress primaryStep={progress} />\n    </StyledProgress>\n  )\n}\n\nexport default IfoCardProgress\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\nexport interface IfoCardDescriptionProps {\n  defaultIsOpen?: boolean\n  description: string\n}\n\nconst StyledIfoCardDescription = styled.div`\n  margin-top: 24px;\n  margin-bottom: 24px;\n`\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.borderColor};\n  height: 1px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 90%;\n`\n\nconst ToggleButton = styled.button`\n  background: transparent;\n  border: none;\n  color: ${({ theme }) => theme.colors.primary};\n  cursor: pointer;\n  display: block;\n  font-weight: 600;\n  outline: 0;\n  padding: 24px 16px;\n  width: 100%;\n`\n\nconst Description = styled(Text)<{ isOpen: boolean }>`\n  color: ${({ theme }) => theme.colors.textSubtle};\n  display: ${({ isOpen }) => (isOpen ? 'block' : 'none')};\n`\n\nconst IfoCardDescription: React.FC<IfoCardDescriptionProps> = ({ defaultIsOpen = true, description }) => {\n  const [isOpen, setIsOpen] = useState(defaultIsOpen)\n  const TranslateString = useI18n()\n\n  const handleClick = () => setIsOpen(!isOpen)\n\n  return (\n    <StyledIfoCardDescription>\n      <Divider />\n      <ToggleButton onClick={handleClick}>\n        {isOpen ? TranslateString(999, 'Hide') : TranslateString(999, 'Show')}\n      </ToggleButton>\n      <Description isOpen={isOpen}>{description}</Description>\n    </StyledIfoCardDescription>\n  )\n}\n\nexport default IfoCardDescription\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Text, LinkExternal, Link } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\nexport interface IfoCardDetailsProps {\n  launchDate: string\n  launchTime: string\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  projectSiteUrl: string\n  raisingAmount: BigNumber\n  totalAmount: BigNumber\n}\n\nconst StyledIfoCardDetails = styled.div`\n  margin-bottom: 24px;\n`\n\nconst Item = styled.div`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.secondary};\n  display: flex;\n`\n\nconst Display = styled(Text)`\n  flex: 1;\n`\n\nconst IfoCardDetails: React.FC<IfoCardDetailsProps> = ({\n  launchDate,\n  launchTime,\n  saleAmount,\n  raiseAmount,\n  cakeToBurn,\n  projectSiteUrl,\n  raisingAmount,\n  totalAmount,\n}) => {\n  const TranslateString = useI18n()\n\n  return (\n    <>\n      <StyledIfoCardDetails>\n        <Item>\n          <Display>{TranslateString(582, 'Launch Time')}</Display>\n          <Text>\n            {launchDate},\n            <Link\n              href=\"https://www.timeanddate.com/worldclock/singapore/singapore\"\n              target=\"blank\"\n              rel=\"noopener noreferrer\"\n              ml=\"4px\"\n              style={{ display: 'inline' }}\n            >\n              {launchTime}\n            </Link>\n          </Text>\n        </Item>\n        <Item>\n          <Display>{TranslateString(584, 'For Sale')}</Display>\n          <Text>{saleAmount}</Text>\n        </Item>\n        <Item>\n          <Display>{TranslateString(999, 'To raise (USD)')}</Display>\n          <Text>{raiseAmount}</Text>\n        </Item>\n        <Item>\n          <Display>{TranslateString(586, 'CUB to burn (USD)')}</Display>\n          <Text>{cakeToBurn}</Text>\n        </Item>\n        <Item>\n          <Display>{TranslateString(999, 'Total raised (% of target)')}</Display>\n          <Text>{`${totalAmount.div(raisingAmount).times(100).toFixed(2)}%`}</Text>\n        </Item>\n      </StyledIfoCardDetails>\n      <LinkExternal href={projectSiteUrl} style={{ margin: 'auto' }}>\n        {TranslateString(412, 'View project site')}\n      </LinkExternal>\n    </>\n  )\n}\n\nexport default IfoCardDetails\n","const MINUTE_IN_SECONDS = 60\r\nconst HOUR_IN_SECONDS = 3600\r\nconst DAY_IN_SECONDS = 86400\r\nconst MONTH_IN_SECONDS = 2629800\r\nconst YEAR_IN_SECONDS = 31557600\r\n\r\n/**\r\n * Format number of seconds into year, month, day, hour, minute, seconds\r\n *\r\n * @param seconds\r\n */\r\nconst getTimePeriods = (seconds: number) => {\r\n  let delta = Math.abs(seconds)\r\n  const timeLeft = {\r\n    years: 0,\r\n    months: 0,\r\n    days: 0,\r\n    hours: 0,\r\n    minutes: 0,\r\n    seconds: 0,\r\n  }\r\n\r\n  if (delta >= YEAR_IN_SECONDS) {\r\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\r\n    delta -= timeLeft.years * YEAR_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= MONTH_IN_SECONDS) {\r\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\r\n    delta -= timeLeft.months * MONTH_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= DAY_IN_SECONDS) {\r\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\r\n    delta -= timeLeft.days * DAY_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= HOUR_IN_SECONDS) {\r\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\r\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= MINUTE_IN_SECONDS) {\r\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\r\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\r\n  }\r\n\r\n  timeLeft.seconds = delta\r\n\r\n  return timeLeft\r\n}\r\n\r\nexport default getTimePeriods\r\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Link, Text } from '@pancakeswap-libs/uikit'\nimport { IfoStatus } from 'config/constants/types'\nimport getTimePeriods from 'utils/getTimePeriods'\nimport useI18n from 'hooks/useI18n'\n\nexport interface IfoCardTimeProps {\n  isLoading: boolean\n  status: IfoStatus\n  secondsUntilStart: number\n  secondsUntilEnd: number\n  block: number\n}\n\nconst Details = styled.div`\n  align-items: center;\n  display: flex;\n  height: 24px;\n  justify-content: center;\n  margin-bottom: 24px;\n`\n\nconst Countdown = styled.div`\n  color: ${({ theme }) => theme.colors.secondary};\n  font-size: 20px;\n  font-weight: 600;\n  text-align: center;\n`\n\nconst IfoCardTime: React.FC<IfoCardTimeProps> = ({ isLoading, status, secondsUntilStart, secondsUntilEnd, block }) => {\n  const TranslateString = useI18n()\n  const countdownToUse = status === 'coming_soon' ? secondsUntilStart : secondsUntilEnd\n  const timeUntil = getTimePeriods(countdownToUse)\n  const suffix = status === 'coming_soon' ? 'start' : 'finish'\n\n  if (isLoading) {\n    return <Details>{TranslateString(656, 'Loading...')}</Details>\n  }\n\n  if (countdownToUse <= 0) {\n    return (\n      <Details>\n        <Text bold>{TranslateString(999, 'Finished!')}</Text>\n      </Details>\n    )\n  }\n\n  return (\n    <Details>\n      <Countdown>{`${timeUntil.days}d, ${timeUntil.hours}h, ${timeUntil.minutes}m until ${suffix}`}</Countdown>\n      <Link href={`https://bscscan.com/block/countdown/${block}`} target=\"blank\" rel=\"noopener noreferrer\" ml=\"8px\">\n        (blocks)\n      </Link>\n    </Details>\n  )\n}\n\nexport default IfoCardTime\n","import React, { ButtonHTMLAttributes } from 'react'\nimport styled from 'styled-components'\nimport { Button, Text } from '@pancakeswap-libs/uikit'\n\ninterface Props extends ButtonHTMLAttributes<HTMLButtonElement> {\n  value: string\n  label?: string\n  buttonLabel: string\n  disabled?: boolean\n}\n\nconst ButtonWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border: solid 1px;\n  border-radius: ${({ theme }) => theme.radii.default};\n  border-color: ${({ theme }) => theme.colors.borderColor};\n  padding-left: 16px;\n`\n\nconst LabelButton: React.FC<Props> = ({ value, label, buttonLabel, onClick, disabled = false }) => {\n  return (\n    <div>\n      {label && (\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {label}\n        </Text>\n      )}\n      <ButtonWrapper>\n        <Text bold fontSize=\"20px\">\n          {value}\n        </Text>\n        <Button onClick={onClick} disabled={disabled}>\n          {buttonLabel}\n        </Button>\n      </ButtonWrapper>\n    </div>\n  )\n}\n\nexport default LabelButton\n","import React from 'react'\nimport styled from 'styled-components'\n\nexport interface InputProps {\n  endAdornment?: React.ReactNode\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\n  placeholder?: string\n  startAdornment?: React.ReactNode\n  value: string\n}\n\nconst Input: React.FC<InputProps> = ({ endAdornment, onChange, placeholder, startAdornment, value }) => {\n  return (\n    <StyledInputWrapper>\n      {!!startAdornment && startAdornment}\n      <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\n      {!!endAdornment && endAdornment}\n    </StyledInputWrapper>\n  )\n}\n\nconst StyledInputWrapper = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.input};\n  border-radius: ${(props) => props.theme.radii.default};\n  display: flex;\n  height: 72px;\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledInput = styled.input`\n  width: 100%;\n  background: none;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  font-size: 18px;\n  flex: 1;\n  height: 56px;\n  margin: 0;\n  padding: 0;\n  outline: none;\n`\n\nexport default Input\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport Input, { InputProps } from './Input'\n\ninterface Props extends InputProps {\n  max: number | string\n  symbol: string\n  onSelectMax?: () => void\n}\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.colors.primary};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`\n\nconst StyledTokenSymbol = styled.span`\n  color: ${(props) => props.theme.colors.primary};\n  font-weight: 700;\n`\n\nconst BalanceInput: React.FC<Props> = ({ max, symbol, onChange, onSelectMax, value }) => {\n  const TranslateString = useI18n()\n\n  return (\n    <div>\n      <Input\n        endAdornment={\n          <StyledTokenAdornmentWrapper>\n            <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\n            <StyledSpacer />\n            <div>\n              <Button size=\"sm\" onClick={onSelectMax}>\n                {TranslateString(452, 'Max')}\n              </Button>\n            </div>\n          </StyledTokenAdornmentWrapper>\n        }\n        onChange={onChange}\n        placeholder=\"0\"\n        value={value}\n      />\n      <StyledMaxText>{TranslateString(454, `${max.toLocaleString()} ${symbol} Available`)}</StyledMaxText>\n    </div>\n  )\n}\n\nexport default BalanceInput\n","import React, { useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { Modal, Button, Flex, LinkExternal } from '@pancakeswap-libs/uikit'\nimport BalanceInput from 'components/Input/BalanceInput'\nimport useTokenBalance from 'hooks/useTokenBalance'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface Props {\n  currency: string\n  contract: any\n  currencyAddress: string\n  onDismiss?: () => void\n}\n\nconst ContributeModal: React.FC<Props> = ({ currency, contract, currencyAddress, onDismiss }) => {\n  const [value, setValue] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const { account } = useWeb3React()\n  const balance = getFullDisplayBalance(useTokenBalance(currencyAddress))\n\n  return (\n    <Modal title={`Contribute ${currency}`} onDismiss={onDismiss}>\n      <BalanceInput\n        value={value}\n        onChange={(e) => setValue(e.currentTarget.value)}\n        symbol={currency}\n        max={balance}\n        onSelectMax={() => setValue(balance.toString())}\n      />\n      <Flex justifyContent=\"space-between\" mb=\"24px\">\n        <Button variant=\"secondary\" onClick={onDismiss} mr=\"8px\">\n          Cancel\n        </Button>\n        <Button\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await contract.methods\n              .deposit(new BigNumber(value).times(new BigNumber(10).pow(18)).toString())\n              .send({ from: account })\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          Confirm\n        </Button>\n      </Flex>\n      <LinkExternal\n        href=\"https://pancakeswap.finance/add/0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56/0x50D809c74e0B8e49e7B4c65BB3109AbE3Ff4C1C1\"\n        style={{ margin: 'auto' }}\n      >\n        {`Get ${currency}`}\n      </LinkExternal>\n    </Modal>\n  )\n}\n\nexport default ContributeModal\n","import React, { useState, useEffect } from 'react'\nimport { useModal, Button, Text } from '@pancakeswap-libs/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { Contract } from 'web3-eth-contract'\nimport { useERC20 } from 'hooks/useContract'\nimport { useIfoAllowance } from 'hooks/useAllowance'\nimport { useIfoApprove } from 'hooks/useApprove'\nimport { IfoStatus } from 'config/constants/types'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport LabelButton from './LabelButton'\nimport ContributeModal from './ContributeModal'\n\nexport interface Props {\n  address: string\n  currency: string\n  currencyAddress: string\n  contract: Contract\n  status: IfoStatus\n  raisingAmount: BigNumber\n  tokenDecimals: number\n}\n\nconst IfoCardContribute: React.FC<Props> = ({\n  address,\n  currency,\n  currencyAddress,\n  contract,\n  status,\n  raisingAmount,\n  tokenDecimals,\n}) => {\n  const [pendingTx, setPendingTx] = useState(false)\n  const [offeringTokenBalance, setOfferingTokenBalance] = useState(new BigNumber(0))\n  const [userInfo, setUserInfo] = useState({ amount: 0, claimed: false })\n\n  const { account } = useWeb3React()\n  const contractRaisingToken = useERC20(currencyAddress)\n  const allowance = useIfoAllowance(contractRaisingToken, address, pendingTx)\n  const onApprove = useIfoApprove(contractRaisingToken, address)\n  const [onPresentContributeModal] = useModal(\n    <ContributeModal currency={currency} contract={contract} currencyAddress={currencyAddress} />,\n  )\n\n  useEffect(() => {\n    const fetch = async () => {\n      const balance = new BigNumber(await contract.methods.getOfferingAmount(account).call())\n      const userinfo = await contract.methods.userInfo(account).call()\n\n      setUserInfo(userinfo)\n      setOfferingTokenBalance(balance)\n    }\n\n    if (account) {\n      fetch()\n    }\n  }, [account, contract.methods, pendingTx])\n\n  if (allowance === null) {\n    return null\n  }\n\n  const claim = async () => {\n    setPendingTx(true)\n    await contract.methods.harvest().send({ from: account })\n    setPendingTx(false)\n  }\n  const isFinished = status === 'finished'\n  const percentOfUserContribution = new BigNumber(userInfo.amount).div(raisingAmount).times(100)\n\n  if (allowance.toNumber() <= 0) {\n    return (\n      <Button\n        disabled={pendingTx || isFinished}\n        onClick={async () => {\n          try {\n            setPendingTx(true)\n            await onApprove()\n            setPendingTx(false)\n          } catch (e) {\n            setPendingTx(false)\n            console.error(e)\n          }\n        }}\n      >\n        Approve\n      </Button>\n    )\n  }\n\n  return (\n    <>\n      <LabelButton\n        disabled={pendingTx || userInfo.claimed}\n        buttonLabel={isFinished ? 'Claim' : 'Contribute'}\n        label={isFinished ? 'Your tokens to claim' : `Your contribution (${currency})`}\n        value={\n          // eslint-disable-next-line no-nested-ternary\n          isFinished\n            ? userInfo.claimed\n              ? 'Claimed'\n              : getBalanceNumber(offeringTokenBalance, tokenDecimals).toFixed(4)\n            : getBalanceNumber(new BigNumber(userInfo.amount)).toFixed(4)\n        }\n        onClick={isFinished ? claim : onPresentContributeModal}\n      />\n      <Text fontSize=\"14px\" color=\"textSubtle\">\n        {isFinished\n          ? `You'll be refunded any excess tokens when you claim`\n          : `${percentOfUserContribution.toFixed(5)}% of total`}\n      </Text>\n    </>\n  )\n}\n\nexport default IfoCardContribute\n","import { useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { getLotteryAddress } from 'utils/addressHelpers'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { useCake } from './useContract'\r\nimport useRefresh from './useRefresh'\r\n\r\n// Retrieve lottery allowance\r\nexport const useLotteryAllowance = () => {\r\n  const [allowance, setAllowance] = useState(BIG_ZERO)\r\n  const { account } = useWeb3React()\r\n  const cakeContract = useCake()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchAllowance = async () => {\r\n      // const res = await cakeContract.methods.allowance(account, getLotteryAddress()).call()\r\n      const res = 0\r\n      setAllowance(new BigNumber(res))\r\n    }\r\n\r\n    if (account) {\r\n      fetchAllowance()\r\n    }\r\n  }, [account, cakeContract, fastRefresh])\r\n\r\n  return allowance\r\n}\r\n\r\n// Retrieve IFO allowance\r\nexport const useIfoAllowance = (tokenContract: Contract, spenderAddress: string, dependency?: any): BigNumber => {\r\n  const { account } = useWeb3React()\r\n  const [allowance, setAllowance] = useState(BIG_ZERO)\r\n\r\n  useEffect(() => {\r\n    const fetch = async () => {\r\n      try {\r\n        const res = await tokenContract.methods.allowance(account, spenderAddress).call()\r\n        setAllowance(new BigNumber(res))\r\n      } catch (e) {\r\n        console.error(e)\r\n      }\r\n    }\r\n\r\n    if (account) {\r\n      fetch()\r\n    }\r\n  }, [account, spenderAddress, tokenContract, dependency])\r\n\r\n  return allowance\r\n}\r\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { Card, CardBody, CardRibbon } from '@pancakeswap-libs/uikit'\nimport { BSC_BLOCK_TIME } from 'config'\nimport { Ifo, IfoStatus } from 'config/constants/types'\nimport useI18n from 'hooks/useI18n'\nimport useBlock from 'hooks/useBlock'\nimport { useIfoContract } from 'hooks/useContract'\nimport UnlockButton from 'components/UnlockButton'\nimport IfoCardHeader from './IfoCardHeader'\nimport IfoCardProgress from './IfoCardProgress'\nimport IfoCardDescription from './IfoCardDescription'\nimport IfoCardDetails from './IfoCardDetails'\nimport IfoCardTime from './IfoCardTime'\nimport IfoCardContribute from './IfoCardContribute'\n\nexport interface IfoCardProps {\n  ifo: Ifo\n}\n\nconst StyledIfoCard = styled(Card)<{ ifoId: string }>`\n  /* background-image: ${({ ifoId }) => `url('/images/ifos/${ifoId}-bg.svg')`};\n  background-repeat: no-repeat;\n  background-size: contain;\n  padding-top: 112px;*/\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 437px;\n  width: 100%;\n`\n\nconst BackgroundImg = styled.img<{ ifoId: string }>`\n  max-height: 112px;\n  width: 100%;\n`\n\nconst getStatus = (currentBlock: number, startBlock: number, endBlock: number): IfoStatus | null => {\n  if (currentBlock < startBlock) {\n    return 'coming_soon'\n  }\n\n  if (currentBlock >= startBlock && currentBlock <= endBlock) {\n    return 'live'\n  }\n\n  if (currentBlock > endBlock) {\n    return 'finished'\n  }\n\n  return null\n}\n\nconst getRibbonComponent = (status: IfoStatus, TranslateString: (translationId: number, fallback: string) => any) => {\n  if (status === 'coming_soon') {\n    return <CardRibbon variantColor=\"textDisabled\" text={TranslateString(999, 'Coming Soon')} />\n  }\n\n  if (status === 'live') {\n    return <CardRibbon variantColor=\"primary\" text={TranslateString(999, 'LIVE NOW!')} />\n  }\n\n  return null\n}\n\nconst IfoCard: React.FC<IfoCardProps> = ({ ifo }) => {\n  const {\n    id,\n    address,\n    name,\n    subTitle,\n    description,\n    launchDate,\n    launchTime,\n    saleAmount,\n    raiseAmount,\n    cakeToBurn,\n    projectSiteUrl,\n    currency,\n    currencyAddress,\n    tokenDecimals,\n    releaseBlockNumber,\n  } = ifo\n  const [state, setState] = useState({\n    isLoading: true,\n    status: null,\n    blocksRemaining: 0,\n    secondsUntilStart: 0,\n    progress: 0,\n    secondsUntilEnd: 0,\n    raisingAmount: new BigNumber(0),\n    totalAmount: new BigNumber(0),\n    startBlockNum: 0,\n    endBlockNum: 0,\n  })\n  const { account } = useWeb3React()\n  const contract = useIfoContract(address)\n\n  const currentBlock = useBlock()\n  const TranslateString = useI18n()\n\n  const Ribbon = getRibbonComponent(state.status, TranslateString)\n\n  useEffect(() => {\n    const fetchProgress = async () => {\n      const [startBlock, endBlock, raisingAmount, totalAmount] = await Promise.all([\n        contract.methods.startBlock().call(),\n        contract.methods.endBlock().call(),\n        contract.methods.raisingAmount().call(),\n        contract.methods.totalAmount().call(),\n      ])\n\n      const startBlockNum = parseInt(startBlock, 10)\n      const endBlockNum = parseInt(endBlock, 10)\n\n      const status = getStatus(currentBlock, startBlockNum, endBlockNum)\n      const totalBlocks = endBlockNum - startBlockNum\n      const blocksRemaining = endBlockNum - currentBlock\n\n      // Calculate the total progress until finished or until start\n      const progress =\n        currentBlock > startBlockNum\n          ? ((currentBlock - startBlockNum) / totalBlocks) * 100\n          : ((currentBlock - releaseBlockNumber) / (startBlockNum - releaseBlockNumber)) * 100\n\n      setState({\n        isLoading: false,\n        secondsUntilEnd: blocksRemaining * BSC_BLOCK_TIME,\n        secondsUntilStart: (startBlockNum - currentBlock) * BSC_BLOCK_TIME,\n        raisingAmount: new BigNumber(raisingAmount),\n        totalAmount: new BigNumber(totalAmount),\n        status,\n        progress,\n        blocksRemaining,\n        startBlockNum,\n        endBlockNum,\n      })\n    }\n\n    fetchProgress()\n  }, [currentBlock, contract, releaseBlockNumber, setState])\n\n  const isActive = state.status === 'live'\n  const isFinished = state.status === 'finished'\n\n  return (\n    <StyledIfoCard ifoId={id} ribbon={Ribbon} isActive={isActive}>\n      <BackgroundImg ifoId={id} src={`/images/ifos/${id}-bg.svg`} />\n      <CardBody>\n        <IfoCardHeader ifoId={id} name={name} subTitle={subTitle} />\n        <IfoCardProgress progress={state.progress} />\n        <IfoCardTime\n          isLoading={state.isLoading}\n          status={state.status}\n          secondsUntilStart={state.secondsUntilStart}\n          secondsUntilEnd={state.secondsUntilEnd}\n          block={isActive || isFinished ? state.endBlockNum : state.startBlockNum}\n        />\n        {!account && <UnlockButton fullWidth />}\n        {(isActive || isFinished) && (\n          <IfoCardContribute\n            address={address}\n            currency={currency}\n            currencyAddress={currencyAddress}\n            contract={contract}\n            status={state.status}\n            raisingAmount={state.raisingAmount}\n            tokenDecimals={tokenDecimals}\n          />\n        )}\n        <IfoCardDescription description={description} />\n        <IfoCardDetails\n          launchDate={launchDate}\n          launchTime={launchTime}\n          saleAmount={saleAmount}\n          raiseAmount={raiseAmount}\n          cakeToBurn={cakeToBurn}\n          projectSiteUrl={projectSiteUrl}\n          raisingAmount={state.raisingAmount}\n          totalAmount={state.totalAmount}\n        />\n      </CardBody>\n    </StyledIfoCard>\n  )\n}\n\nexport default IfoCard\n","import styled from 'styled-components'\nimport { Heading } from '@pancakeswap-libs/uikit'\n\nconst Title = styled(Heading).attrs({ size: 'lg' })`\n  color: ${({ theme }) => theme.colors.secondary};\n  margin-bottom: 16px;\n`\n\nexport default Title\n","import styled from 'styled-components'\n\ninterface IfoCardWrapperProps {\n  isSingle?: boolean\n}\n\nconst IfoCardWrapper = styled.div<IfoCardWrapperProps>`\n  border-top: 2px solid ${({ theme }) => theme.colors.textSubtle};\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 32px;\n  padding-bottom: 40px;\n  padding-top: 40px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-template-columns: ${({ isSingle }) => `repeat(${isSingle ? 1 : 2}, 1fr)`};\n  }\n`\n\nIfoCardWrapper.defaultProps = {\n  isSingle: false,\n}\n\nexport default IfoCardWrapper\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Heading, BaseLayout, Button, LinkExternal, Flex, Image } from '@pancakeswap-libs/uikit'\nimport { ifosConfig } from 'config/constants'\nimport useI18n from 'hooks/useI18n'\nimport IfoCard from './components/IfoCard'\nimport Title from './components/Title'\nimport IfoCards from './components/IfoCards'\n\nconst LaunchIfoCallout = styled(BaseLayout)`\n  border-top: 2px solid ${({ theme }) => theme.colors.textSubtle};\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 32px;\n  margin: 0 auto;\n  padding: 32px 0;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-template-columns: 1fr 1fr;\n  }\n`\n\nconst List = styled.ul`\n  color: ${({ theme }) => theme.colors.text};\n  margin-bottom: 16px;\n\n  & > li {\n    line-height: 1.4;\n    margin-bottom: 8px;\n  }\n`\n\n/**\n * Note: currently there should be only 1 active IFO at a time\n */\nconst activeIfo = ifosConfig.find((ifo) => ifo.isActive)\n\nconst Ifo = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <div>\n      <IfoCards isSingle>\n        <IfoCard ifo={activeIfo} />\n      </IfoCards>\n      <LaunchIfoCallout>\n        <div>\n          <Title as=\"h2\">{TranslateString(592, 'How to Participate in Decentralized IDOs on CubFinance')}</Title>\n          <Heading mb=\"16px\">{TranslateString(594, 'Before IDO')}:</Heading>\n          <List>\n            <li>{TranslateString(596, 'Buy CUB and BUSD Tokens')}</li>\n            <li>{TranslateString(598, 'Get CUB-BUSD LP tokens (PCSv2 Only) on PancakeSwap')}</li>\n          </List>\n          <Flex mb=\"16px\">\n            <LinkExternal href=\"https://exchange.cubdefi.com/\" mr=\"16px\">\n              {TranslateString(999, 'Buy CUB')}\n            </LinkExternal>\n            <LinkExternal href=\"https://pancakeswap.finance/add/0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56/0x50D809c74e0B8e49e7B4c65BB3109AbE3Ff4C1C1\">\n              {TranslateString(999, 'Get LP tokens')}\n            </LinkExternal>\n          </Flex>\n          <Heading mb=\"16px\">{TranslateString(600, 'During IDO')}:</Heading>\n          <List>\n            <li>{TranslateString(602, 'While the IDO is live, commit your CUB-BUSD LP tokens to participate in the decentralized raise at the predetermined token price')}</li>\n          </List>\n          <Heading mb=\"16px\">{TranslateString(604, 'After IDO')}:</Heading>\n          <List>\n            <li>{TranslateString(606, 'Click \"Claim\" to claim the IDO tokens you purchased along with any unspent CUB-BUSD LP.')}</li>\n            <li>{TranslateString(608, 'Done!')}</li>\n          </List>\n          <img src=\"images/cub/header_logo_wide.svg\" alt=\"cub\" />\n          <Text as=\"div\" pt=\"16px\">\n            <Button\n              as=\"a\"\n              variant=\"secondary\"\n              href=\"https://docs.cubdefi.com/major-feature-releases/initial-dex-offering-ido\"\n            >\n              {TranslateString(610, 'Read more')}\n            </Button>\n          </Text>\n        </div>\n        <div>\n          <Image src=\"/images/cub/wide.svg\" alt=\"ifo bunny\" width={436} height={406} responsive />\n          <div>\n            <Title as=\"h2\">{TranslateString(512, 'Want to launch your own IDO?')}</Title>\n            <Text mb={3}>\n              {TranslateString(\n                514,\n                'Launch your project with CubDefi to bring your token directly to the most active and rapidly growing community on BSC.',\n              )}\n            </Text>\n            <Button\n              as=\"a\"\n              href=\"https://forms.gle/qRRKAefPsh6D83Ys9\"\n              external\n            >\n              {TranslateString(516, 'Apply to launch')}\n            </Button>\n          </div>\n        </div>\n      </LaunchIfoCallout>\n    </div>\n  )\n}\n\nexport default Ifo\n","import React from 'react'\nimport { ifosConfig } from 'config/constants'\nimport { Ifo } from 'config/constants/types'\nimport IfoCard from './components/IfoCard'\nimport IfoCards from './components/IfoCards'\n\nconst inactiveIfo: Ifo[] = ifosConfig.filter((ifo) => !ifo.isActive)\n\nconst PastIfo = () => {\n  return (\n    <IfoCards>\n      {inactiveIfo.map((ifo) => (\n        <IfoCard key={ifo.id} ifo={ifo} />\n      ))}\n    </IfoCards>\n  )\n}\n\nexport default PastIfo\n","import React from 'react'\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport Container from 'components/layout/Container'\nimport IfoTabButtons from './components/IfoTabButtons'\nimport Hero from './components/Hero'\nimport CurrentIfo from './CurrentIfo'\nimport PastIfo from './PastIfo'\n\nconst Ifos = () => {\n  const { path } = useRouteMatch()\n\n  return (\n    <>\n      <Hero />\n      <Container>\n        <IfoTabButtons />\n        <Route exact path={`${path}`}>\n          <CurrentIfo />\n        </Route>\n        <Route path={`${path}/history`}>\n          <PastIfo />\n        </Route>\n      </Container>\n    </>\n  )\n}\n\nexport default Ifos\n","import { useContext } from 'react'\r\nimport { isEmpty } from 'lodash'\r\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\r\n\r\ninterface ContextData {\r\n  [key: string]: number | string\r\n}\r\n\r\nconst useI18n = () => {\r\n  const { translations } = useContext(TranslationsContext)\r\n\r\n  return (translationId: number, fallback: string, data: ContextData = {}) => {\r\n    if (translations.length === 0) {\r\n      return fallback\r\n    }\r\n\r\n    const foundTranslation = translations.find((translation) => {\r\n      return translation.data.stringId === translationId\r\n    })\r\n\r\n    if (foundTranslation) {\r\n      const { text } = foundTranslation.data\r\n      const includesVariable = text.includes('%')\r\n\r\n      if (includesVariable) {\r\n        let interpolatedText = text\r\n\r\n        // If dynamic tags are found but no data was passed return the fallback\r\n        if (isEmpty(data)) {\r\n          return fallback\r\n        }\r\n\r\n        Object.keys(data).forEach((dataKey) => {\r\n          const templateKey = new RegExp(`%${dataKey}%`, 'g')\r\n          interpolatedText = interpolatedText.replace(templateKey, data[dataKey])\r\n        })\r\n\r\n        return interpolatedText\r\n      }\r\n\r\n      return text\r\n    }\r\n\r\n    return fallback\r\n  }\r\n}\r\n\r\nexport default useI18n\r\n","import { useMemo } from 'react'\r\nimport useWeb3 from 'hooks/useWeb3'\r\nimport {\r\n  getBep20Contract,\r\n  getCakeContract,\r\n  getBunnyFactoryContract,\r\n  getBunnySpecialContract,\r\n  getPancakeRabbitContract,\r\n  getProfileContract,\r\n  getIfoContract,\r\n  getIfoV1Contract,\r\n  getIfoV2Contract,\r\n  getLotteryContract,\r\n  getLotteryTicketContract,\r\n  getMasterchefContract,\r\n  getKingdomsContract,\r\n  getBnbDvividendsContract,\r\n  getPointCenterIfoContract,\r\n  getSouschefContract,\r\n  getClaimRefundContract,\r\n  getTradingCompetitionContract,\r\n  getEasterNftContract,\r\n  getErc721Contract,\r\n  getCakeVaultContract,\r\n  getPredictionsContract,\r\n} from 'utils/contractHelpers'\r\n\r\n/**\r\n * Helper hooks to get specific contracts (by ABI)\r\n */\r\n\r\nexport const useIfoContract = (address: string) => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getIfoContract(address, web3), [address, web3])\r\n}\r\n\r\nexport const useIfoV1Contract = (address: string) => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getIfoV1Contract(address, web3), [address, web3])\r\n}\r\n\r\nexport const useIfoV2Contract = (address: string) => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getIfoV2Contract(address, web3), [address, web3])\r\n}\r\n\r\nexport const useERC20 = (address: string) => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getBep20Contract(address, web3), [address, web3])\r\n}\r\n\r\n/**\r\n * @see https://docs.openzeppelin.com/contracts/3.x/api/token/erc721\r\n */\r\nexport const useERC721 = (address: string) => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getErc721Contract(address, web3), [address, web3])\r\n}\r\n\r\nexport const useCake = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getCakeContract(web3), [web3])\r\n}\r\n\r\nexport const useBunnyFactory = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getBunnyFactoryContract(web3), [web3])\r\n}\r\n\r\nexport const usePancakeRabbits = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getPancakeRabbitContract(web3), [web3])\r\n}\r\n\r\nexport const useProfile = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getProfileContract(web3), [web3])\r\n}\r\n\r\nexport const useLottery = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getLotteryContract(web3), [web3])\r\n}\r\n\r\nexport const useLotteryTicket = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getLotteryTicketContract(web3), [web3])\r\n}\r\n\r\nexport const useMasterchef = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getMasterchefContract(web3), [web3])\r\n}\r\n\r\nexport const useKingdom = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getKingdomsContract(web3), [web3])\r\n}\r\n\r\nexport const useBnbDvividendsContract = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getBnbDvividendsContract(web3), [web3])\r\n}\r\n\r\nexport const useSousChef = (id) => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getSouschefContract(id, web3), [id, web3])\r\n}\r\n\r\nexport const usePointCenterIfoContract = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getPointCenterIfoContract(web3), [web3])\r\n}\r\n\r\nexport const useBunnySpecialContract = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getBunnySpecialContract(web3), [web3])\r\n}\r\n\r\nexport const useClaimRefundContract = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getClaimRefundContract(web3), [web3])\r\n}\r\n\r\nexport const useTradingCompetitionContract = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getTradingCompetitionContract(web3), [web3])\r\n}\r\n\r\nexport const useEasterNftContract = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getEasterNftContract(web3), [web3])\r\n}\r\n\r\nexport const useCakeVaultContract = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getCakeVaultContract(web3), [web3])\r\n}\r\n\r\nexport const usePredictionsContract = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getPredictionsContract(web3), [web3])\r\n}\r\n","import BigNumber from 'bignumber.js'\r\nimport { DEFAULT_TOKEN_DECIMAL } from 'config'\r\nimport { ethers } from 'ethers'\r\nimport { BIG_TEN, BIG_ZERO } from './bigNumber'\r\n\r\nexport const approve = async (lpContract, masterChefContract, account) => {\r\n  return lpContract.methods\r\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\r\n    .send({ from: account })\r\n}\r\n\r\nexport const stake = async (masterChefContract, pid, amount, account) => {\r\n  return masterChefContract.methods\r\n    .deposit(pid, new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousStake = async (sousChefContract, amount, decimals = 18, account) => {\r\n  return sousChefContract.methods\r\n    .deposit(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .deposit()\r\n    .send({ from: account, gas: 200000, value: new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString() })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const unstake = async (masterChefContract, pid, amount, account) => {\r\n  return masterChefContract.methods\r\n    .withdraw(pid, new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousUnstake = async (sousChefContract, amount, decimals = 18, account) => {\r\n  // shit code: hard fix for old CTK and BLK\r\n  if (sousChefContract.options.address === '0x3B9B74f48E89Ebd8b45a53444327013a2308A9BC') {\r\n    return sousChefContract.methods\r\n      .emergencyWithdraw()\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  }\r\n  if (sousChefContract.options.address === '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831') {\r\n    return sousChefContract.methods\r\n      .emergencyWithdraw()\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  }\r\n  if (sousChefContract.options.address === '0x453a75908fb5a36d482d5f8fe88eca836f32ead5') {\r\n    return sousChefContract.methods\r\n      .emergencyWithdraw()\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  }\r\n\r\n  return sousChefContract.methods\r\n    .withdraw(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousEmergencyUnstake = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .emergencyWithdraw()\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const harvest = async (masterChefContract, pid, account, isKingdom) => {\r\n  if (isKingdom) {\r\n    return masterChefContract.methods\r\n      .withdraw(pid, '0')\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  }\r\n  return masterChefContract.methods\r\n    .deposit(pid, '0')\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const claim = async (contract, account, user, amount, nonce, signature) => {\r\n  return contract.methods\r\n    .claim(user, amount, nonce, signature)\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const soushHarvest = async (sousChefContract, account) => {\r\n  return sousChefContract.methods\r\n    .deposit('0')\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const soushHarvestBnb = async (sousChefContract, account) => {\r\n  return sousChefContract.methods\r\n    .deposit()\r\n    .send({ from: account, value: BIG_ZERO })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n","import { useEffect, useState, useRef } from 'react'\r\nimport Web3 from 'web3'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { getWeb3NoAccount } from 'utils/web3'\r\n\r\n/**\r\n * Provides a web3 instance using the provider provided by useWallet\r\n * with a fallback of an httpProver\r\n * Recreate web3 instance only if the provider change\r\n */\r\nconst useWeb3 = () => {\r\n  const { library } = useWeb3React()\r\n  const refEth = useRef(library)\r\n  const [web3, setweb3] = useState(library ? new Web3(library) : getWeb3NoAccount())\r\n\r\n  useEffect(() => {\r\n    if (library !== refEth.current) {\r\n      setweb3(library ? new Web3(library) : getWeb3NoAccount())\r\n      refEth.current = library\r\n    }\r\n  }, [library])\r\n\r\n  return web3\r\n}\r\n\r\nexport default useWeb3\r\n","import React from 'react'\r\nimport { Button, useWalletModal } from '@pancakeswap-libs/uikit'\r\nimport useAuth from 'hooks/useAuth'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nconst UnlockButton = (props) => {\r\n  const TranslateString = useI18n()\r\n  const { login, logout } = useAuth()\r\n  const { onPresentConnectModal } = useWalletModal(login, logout)\r\n\r\n  return (\r\n    <Button onClick={onPresentConnectModal} {...props}>\r\n      {TranslateString(292, 'Unlock Wallet')}\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default UnlockButton\r\n","import { useCallback } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { ethers } from 'ethers'\r\nimport { useAppDispatch } from 'state'\r\nimport { updateUserAllowance, fetchFarmUserDataAsync } from 'state/actions'\r\nimport { approve } from 'utils/callHelpers'\r\nimport { useMasterchef, useCake, useSousChef, useLottery, useKingdom } from './useContract'\r\n\r\n// Approve a Farm\r\nexport const useApprove = (lpContract: Contract, isKingdom?: boolean) => {\r\n  const dispatch = useAppDispatch()\r\n  const { account } = useWeb3React()\r\n  const masterChefContract = useMasterchef()\r\n  const kingdomContract = useKingdom()\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(lpContract, isKingdom ? kingdomContract : masterChefContract, account)\r\n      dispatch(fetchFarmUserDataAsync(account))\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, dispatch, lpContract, masterChefContract, kingdomContract, isKingdom])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve a Pool\r\nexport const useSousApprove = (lpContract: Contract, sousId) => {\r\n  const dispatch = useAppDispatch()\r\n  const { account } = useWeb3React()\r\n  const sousChefContract = useSousChef(sousId)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(lpContract, sousChefContract, account)\r\n      dispatch(updateUserAllowance(sousId, account))\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, dispatch, lpContract, sousChefContract, sousId])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve the lottery\r\nexport const useLotteryApprove = () => {\r\n  const { account } = useWeb3React()\r\n  const cakeContract = useCake()\r\n  const lotteryContract = useLottery()\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(cakeContract, lotteryContract, account)\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, cakeContract, lotteryContract])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve an IFO\r\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\r\n  const { account } = useWeb3React()\r\n  const onApprove = useCallback(async () => {\r\n    const tx = await tokenContract.methods.approve(spenderAddress, ethers.constants.MaxUint256).send({ from: account })\r\n    return tx\r\n  }, [account, spenderAddress, tokenContract])\r\n\r\n  return onApprove\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { getBep20Contract, getCakeContract } from 'utils/contractHelpers'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport useWeb3 from './useWeb3'\r\nimport useRefresh from './useRefresh'\r\nimport useLastUpdated from './useLastUpdated'\r\n\r\nconst useTokenBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(BIG_ZERO)\r\n  const { account } = useWeb3React()\r\n  const web3 = useWeb3()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const contract = getBep20Contract(tokenAddress, web3)\r\n      const res = await contract.methods.balanceOf(account).call()\r\n      setBalance(new BigNumber(res))\r\n    }\r\n\r\n    if (account) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, tokenAddress, web3, fastRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport const useTotalSupply = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\r\n\r\n  useEffect(() => {\r\n    async function fetchTotalSupply() {\r\n      const cakeContract = getCakeContract()\r\n      const supply = await cakeContract.methods.totalSupply().call()\r\n      setTotalSupply(new BigNumber(supply))\r\n    }\r\n\r\n    fetchTotalSupply()\r\n  }, [slowRefresh])\r\n\r\n  return totalSupply\r\n}\r\n\r\nexport const useBurnedBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(BIG_ZERO)\r\n  const { slowRefresh } = useRefresh()\r\n  const web3 = useWeb3()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const contract = getBep20Contract(tokenAddress, web3)\r\n      const res = await contract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\r\n      setBalance(new BigNumber(res))\r\n    }\r\n\r\n    fetchBalance()\r\n  }, [web3, tokenAddress, slowRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport const useGetBnbBalance = () => {\r\n  const [balance, setBalance] = useState(BIG_ZERO)\r\n  const { account } = useWeb3React()\r\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\r\n  const web3 = useWeb3()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const walletBalance = await web3.eth.getBalance(account)\r\n      setBalance(new BigNumber(walletBalance))\r\n    }\r\n\r\n    if (account) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, web3, lastUpdated, setBalance])\r\n\r\n  return { balance, refresh: setLastUpdated }\r\n}\r\n\r\nexport default useTokenBalance\r\n"],"sourceRoot":""}